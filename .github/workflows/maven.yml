# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ main ]
    # 排除路径
    # https://docs.github.com/zh/actions/using-workflows/workflow-syntax-for-github-actions#%E7%A4%BA%E4%BE%8B%E6%8E%92%E9%99%A4%E8%B7%AF%E5%BE%84
    paths-ignore:
      - 'docs/**'
      - '**/**.md'
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - '**/**.md'

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        java-version: [ 8, 11, 17 ]
        os: [ "ubuntu-latest" ]

    steps:
      # 检出代码
      - name: Checkout repository
        uses: actions/checkout@v3

      # 设置JDK版本
      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'temurin'

      - name: Cache modules
        uses: actions/cache@v3
        id: cache-modules
        with:
          path: |
            ~/.m2/repository
            ~/.npm
            $GITHUB_WORKSPACE/passport-ui/node/
            $GITHUB_WORKSPACE/passport-ui/node_modules/
            $GITHUB_WORKSPACE/ui/node/
            $GITHUB_WORKSPACE/ui/node_modules/
          key: ${{ matrix.os }}-${{ hashFiles('pom.xml', '**/pom.xml', '**/**/pom.xml', '**/package.json') }}
          restore-keys: |
            ${{ matrix.os }}-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: CI ENV
        id: date
        # bash, sh, cmd, powershell, pwsh
        # shell 类型必须为 sh，否则：
        # $GITHUB_ENV：仅支持 ubuntu、macos
        # $env:GITHUB_ENV：仅支持 windows
        shell: sh
        run: |
          env
          echo $GITHUB_RUN_ID
          echo $GITHUB_JOB-${{ matrix.java-version }}
          echo "CI_PIPELINE_ID=$GITHUB_RUN_ID" >> $GITHUB_ENV
          echo "CI_JOB_ID=$GITHUB_JOB-${{ matrix.java-version }}" >> $GITHUB_ENV

      - name: Build with Maven
        run: |
          mvn clean -e -U package source:jar javadoc:jar install -DskipTests
          mvn -pl admin-server docker:build -Ddocker.host=unix:///var/run/docker.sock
          mvn -pl gateway docker:build -Ddocker.host=unix:///var/run/docker.sock
          mvn -pl passport docker:build -Ddocker.host=unix:///var/run/docker.sock
          mvn -pl resource-services-parent/canal docker:build -Ddocker.host=unix:///var/run/docker.sock
          mvn -pl resource-services-parent/file docker:build -Ddocker.host=unix:///var/run/docker.sock
          mvn -pl resource-services-parent/master-data docker:build -Ddocker.host=unix:///var/run/docker.sock
          mvn -pl resource-services-parent/user docker:build -Ddocker.host=unix:///var/run/docker.sock
          mvn -pl resource-services-parent/webservice docker:build -Ddocker.host=unix:///var/run/docker.sock
          mvn -pl resource-services-parent/websocket docker:build -Ddocker.host=unix:///var/run/docker.sock
          mvn -pl resource-services-parent/wechat-miniprogram docker:build -Ddocker.host=unix:///var/run/docker.sock
          mvn -pl resource-services-parent/wechat-offiaccount docker:build -Ddocker.host=unix:///var/run/docker.sock
          mvn -pl ui docker:build -Ddocker.host=unix:///var/run/docker.sock
          mvn -pl xxl-job-admin docker:build -Ddocker.host=unix:///var/run/docker.sock
          docker images
          rm -rf /home/runner/.m2/repository/cloud/xuxiaowei
          rm -rf /home/runner/.m2/repository/cn/com/xuxiaowei
