# 服务器
server:
  # 端口
  port: ${xxl_job_admin_port:5101}
#
# Spring 配置
spring:
  application:
    name: xxl-job-admin
  # 配置环境
  profiles:
    # 激活
    active:
      - dev
  # Cloud 配置
  cloud:
    # 网络工具
    inetutils:
      # 将被忽略的网络接口的 Java 正则表达式列表。
      ignored-interfaces:
        # 正则表达式
        # 忽略 VMware 虚拟机网卡
        - VMware.*
        # 忽略 VirtualBox 虚拟机网卡
        - VirtualBox.*
    #
    # Nacos 配置
    nacos:
      username: ${nacos_username:xuxiaowei-cloud}
      password: ${nacos_password:xuxiaowei.com.cn}
      # 服务发现
      discovery:
        # 服务发现地址
        server-addr: ${nacos_xuxiaowei_cloud_addr:nacos.example.xuxiaowei.cloud:8848}
        # 命名空间
        namespace: ${nacos_xuxiaowei_cloud_discovery_namespace:}
        # 自定义注册IP（为空时使用程序自动获取本机IP）
        ip: ${xxl_job_admin_discovery_ip:}
        # 自定义注册端口（为-1时使用程序启动时的端口）
        port: ${xxl_job_admin_discovery_port:-1}
      # 服务配置
      config:
        # 配置文件后缀名
        file-extension: yml
        # 配置服务器地址
        server-addr: ${nacos_xuxiaowei_cloud_addr:nacos.example.xuxiaowei.cloud:8848}
        # 命名空间
        namespace: ${nacos_xuxiaowei_cloud_config_namespace:}
        # 共享配置
        shared-configs:
          - dataId: xuxiaowei.${spring.cloud.nacos.config.file-extension}
            # 是否支持刷新
            refresh: true


---
# 以下配置可放入 nacos 中


#
# 日志 配置
#
logging:
  # 日志等级
  level:
    # 在微服务中，直接使用 `web: debug` 无效
    # web: debug
    org.springframework.web: debug
    # 包：日志等级
    cloud.xuxiaowei: debug
  # 日志文件
  file:
    # 文件名及路径
    name: /logs/${spring.application.name}/${spring.application.name}.log
    # 文件最大大小，单位: org.springframework.util.unit.DataSize
    # 已废弃，推荐使用：logging.logback.rollingpolicy.max-file-size
    # max-size: 20MB
    # 日志保存天数
    # 已废弃，推荐使用：logging.logback.rollingpolicy.max-history
    # max-history: 365
  logback:
    rollingpolicy:
      # 文件最大大小，单位: org.springframework.util.unit.DataSize
      # 旧版使用：logging.file.max-size
      max-file-size: 20MB
      # 日志保存天数
      # 旧版使用：logging.file.max-history
      max-history: 365
      # 压缩文件命名
      # 后缀名中比原始配置添加了 `.log`，解压后方便打开看
      # 旧版使用：logging.pattern.rolling-file-name
      file-name-pattern: ${LOG_FILE}.%d{yyyy-MM-dd}.%i.log.gz
  # 格式
  pattern:
    # 压缩文件命名
    # 后缀名中比原始配置添加了 `.log`，解压后方便打开看
    # 已废弃，推荐使用：logging.logback.rollingpolicy.file-name-pattern
    # rolling-file-name: "${LOG_FILE}.%d{yyyy-MM-dd}.%i.log.gz"
    # 控制台日志格式
    # 默认值："%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"
    # 增加了：%X{NAME} %clr(:){faint} %X{IP} %clr(:){faint} %X{REQUEST_ID} %clr(:){faint}
    # LOG_LEVEL_PATTERN：日志等级
    # -%5p：宽度
    # PID：线程
    console: "%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %X{HOST_NAME} %clr(:){faint} %X{USERS_ID} %clr(:){faint} %X{NAME} %clr(:){faint} %X{IP} %clr(:){faint} %X{REQUEST_ID} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"
    # 日志文件格式
    # 默认值："%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"
    # 增加了：%X{NAME} : %X{IP} : %X{REQUEST_ID} :
    file: "%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %X{HOST_NAME} : %X{USERS_ID} : %X{NAME} : %X{IP} : %X{REQUEST_ID} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"
    # 日期时间格式
    dateformat: "yyyy-MM-dd HH:mm:ss.SSS"

# 管理服务
management:
  endpoints:
    web:
      exposure:
        include: '*'


# 数据库配置
spring:
  # 数据库
  datasource:
    # 数据库 连接串
    # url: jdbc:mysql://${mysql_xuxiaowei_cloud:mysql.example.xuxiaowei.cloud:3306}/${mysql_xuxiaowei_database:xuxiaowei_cloud_xxl_job}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=GMT%2B8
    # 数据库 连接串 - 测试环境使用
    url: jdbc:p6spy:mysql://${mysql_xuxiaowei_cloud:mysql.example.xuxiaowei.cloud:3306}/${mysql_xuxiaowei_xxl_job_database:xuxiaowei_cloud_xxl_job}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=GMT%2B8
    # 数据库 用户名
    username: ${mysql_xuxiaowei_cloud_username:root}
    # 数据库 密码
    password: ${mysql_xuxiaowei_cloud_password:xuxiaowei.com.cn}
    # 数据库 驱动名称
    # driver-class-name: com.mysql.cj.jdbc.Driver # 3.2.0开始支持SPI可省略此配置
    # 数据库 驱动名称 - 测试环境使用
    driver-class-name: com.p6spy.engine.spy.P6SpyDriver

---

## QQ邮箱
## 不推荐使用：
## 1：无法撤销授权码，即使关闭后重开，之前的授权码一样可以使用
## 2：不稳定
#spring:
#  # [QQ邮箱-如何使用IMAP服务？](https://service.mail.qq.com/cgi-bin/help?subtype=1&id=28&no=331)
#  mail:
#    host: smtp.qq.com
#    username: ${qq_mail_username:}
#    password: ${qq_mail_password:}
#    port: ${qq_mail_port:587}
#    default-encoding: UTF-8
#    properties:
#      "[mail.smtp.socketFactoryClass]": javax.net.ssl.SSLSocketFactory
#      "[mail.debug]": ${qq_mail_debug:true}

# Microsoft Office 365
spring:
  # [在 Exchange Online 中启用或禁用经过身份验证的客户端 SMTP 提交 (SMTP AUTH)](https://learn.microsoft.com/en-us/exchange/clients-and-mobile-in-exchange-online/authenticated-client-smtp-submission)
  mail:
    host: smtp.office365.com
    username: ${microsoft_office_365_mail_username:}
    password: ${microsoft_office_365_mail_password:}
    port: ${microsoft_office_365_mail_port:587}
    default-encoding: UTF-8
    properties:
      # com.sun.mail.smtp.SMTPSendFailedException: 451 5.7.3 STARTTLS is required to send mail [SG2PR04CA0180.apcprd04.prod.outlook.com]
      "[mail.smtp.starttls.enable]": true
      "[mail.debug]": ${microsoft_office_365_mail_debug:true}
